{"mutators":{"MaxPlayerCount_PerTeam":10,"AiSpawnType":2,"ManDownExperienceType_PerTeam":2,"Vehicle_AllowPassengers":false,"AI_Vehicle_AllowAiInPassengerSeats":false,"SquadReviveAllowed_PerTeam":false,"InfiniteWeaponMagazines_PerTeam":true,"StationaryEmplacementsAllowed":false,"CompassAllowed_PerTeam":false,"PingBehavior_PerTeam":2,"SoldierRespawnDelayMultiplier_PerTeam":0.4,"ScoreboardType":4,"AI_ManDownExperienceType_PerTeam":2,"AI_SquadSpawnMode_PerTeam":3,"ModBuilder_GameMode":2,"AimAssistSnapCapsuleRadiusMultiplier":1,"FriendlyFireDamageReflectionMaxTeamKills":2,"SquadSize_PerTeam":1,"SpottingAllowed":false,"SpawnBalancing_GamemodeStartTimer":0,"SpawnBalancing_GamemodePlayerCountRatio":0.75,"SquadSpawnMode_PerTeam":3},"assetRestrictions":{"Portal_WebApp_DMR":false,"Portal_WebApp_SR":false,"Portal_WebApp_Carbine":false,"Portal_WebApp_MG":false,"Portal_WebApp_PDW":false,"Portal_WebApp_Pistol":false,"Portal_WebApp_SG":false,"Portal_WebApp_AR":false,"Portal_WebApp_GroundTransport":false,"Portal_WebApp_GroundCombat":false,"Portal_WebApp_AirCombat":false,"Portal_WebApp_Stationary":false,"Portal_WebApp_Deployable":false,"Portal_WebApp_GrenadeLauncher":false,"Portal_WebApp_ClassGadget":false,"U_Melee_Sledgehammer":false,"U_Melee_GekoKnife":false,"Portal_WebApp_Explosive":false,"Portal_WebApp_Gadget_Misc":false,"Portal_WebApp_Launcher":false,"Portal_WebApp_Throwable":false},"name":"GunMaster DEV","description":"Classic GunMaster Mode like in BF3\nVersion 0.3.1 by Jaywalker","mapRotation":[{"id":"MP_Limestone-ModBuilderCustom0","spatialAttachment":{"id":"9510d10b-9b1e-4e8e-9408-117d7bc1661f","filename":"GunGame.spatial.json","metadata":"mapIdx=0","version":"123","isProcessable":true,"processingStatus":2,"attachmentData":{"original":"","compiled":""},"attachmentType":1,"errors":[]}}],"workspace":{"mod":{"blocks":{"languageVersion":0,"blocks":[{"type":"modBlock","id":"ax*=`$a5CO)j3DwBa1wJ","x":10,"y":10,"deletable":false,"inputs":{"RULES":{"block":{"type":"ruleBlock","id":"vMj1516XBP^RM[4RyNck","extraState":{"isOngoingEvent":true},"fields":{"NAME":"Neue Regel","EVENTTYPE":"Ongoing","OBJECTTYPE":"Global"}}}}}]}}},"teamComposition":[[1,{"humanCapacity":10,"aiCapacity":0,"aiType":0}],[2,{"humanCapacity":10,"aiCapacity":0,"aiType":0}]],"gameMode":"ModBuilderCustom","attachments":[{"id":"0c824496-307a-48dd-967b-762558900156","version":"234","filename":"Script.ts","isProcessable":true,"processingStatus":2,"attachmentData":{"original":"","compiled":""},"attachmentType":2,"errors":[]},{"id":"9510d10b-9b1e-4e8e-9408-117d7bc1661f","version":"123","filename":"GunGame.spatial.json","isProcessable":true,"processingStatus":2,"attachmentData":{"original":"","compiled":"eyJ2ZXJzaW9uIjoiMC4wLjIiLCJhZGRHZW0iOlt7ImlkIjoiODA1ZmEwMGUtZDg1Yy00YTQ5LTg1NjItYjVkYjgyZTYwN2FkIiwiZ2VtVHlwZSI6IjgzYzM5OWQxLWYxMTgtNDMyMS1iNGNkLTA2YTBmYjFjMDRjYyIsInRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjoxLCJ5IjowLCJ6IjowfSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6MCwieSI6MCwieiI6MX0sInRyYW5zIjp7IngiOjI4My42NTEsInkiOjkzLjQxNDQsInoiOjEzMy40Mn19LCJsaW5rZWQiOnsiQ29tYmF0Vm9sdW1lIjpbImE2MDRjYzFkLTllNTMtNGY2ZS04OTA0LTAxYWZmZjA0MGExNiJdfX0seyJpZCI6IjY2MzQzOTdiLTU0YTgtNGJhZC1iMjhmLWIyODJjOWNlYzJkMyIsImdlbVR5cGUiOiI4NjE3NDNjMy04MDBmLTRhYzktYjQ4NS0xZmFjYWJkZTQ2ZDEiLCJwcm9wZXJ0aWVzIjpbeyJwcm9wZXJ0eU5hbWUiOiJBbHRUZWFtIiwicHJvcGVydHlWYWx1ZSI6IjAifSx7InByb3BlcnR5TmFtZSI6Ik9iaklkIiwicHJvcGVydHlWYWx1ZSI6IjEifV0sInRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjoxLCJ5IjowLCJ6IjowfSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6MCwieSI6MCwieiI6MX0sInRyYW5zIjp7IngiOjU4Ni4yNjgsInkiOjE0MC43MTMsInoiOjI2OS4wMzZ9fSwibGlua2VkIjp7IkluZmFudHJ5U3Bhd25zIjpbIjcxZjEwZWM1LTFiOGYtNDY1NC1iNjY4LTA5MmIwMjViYWYyMyIsIjZlMTQ4Zjg0LWEyZjctNDYxNS1hYWM3LWNhZGVmNzIyOWY5ZSIsIjllZTI1ZDg1LTY2MzEtNDI0OS1iZDJlLTgxYjg4N2JlZGYxNCIsImQ4MzYwMzA4LTY0NDYtNDcyYy05OGM1LTc4NTk4MDVhNmEzMyIsIjQ3M2IwM2I2LTY0NTctNGEwZi1hYzIxLWEzMzdhYWRkOTE3ZSIsIjVhMTYwNDg1LTIzM2ItNDRmNC1iOTAwLTM2NDhiZmQxNzVhOCIsIjQxYTFhYTczLWZjNjctNGNjNS1hY2Y5LTA2NTY2NWY0ZjRiZSIsIjgzNTI5MGI0LWE0ZDMtNDI1ZC04MDM1LTA0NjMwNjg5NmQ4ZCIsIjFmODkyZjUyLTAwZDEtNDZiNy04ZGYyLWY5YjhiZmRmMzliNSIsImY0YzAyNTQ0LTYyNmUtNDllMy04M2M2LWUzODcyNmE0MWY2ZiIsIjFiOWY4MWRiLWJiY2UtNGYxMS05Y2U5LTBkMjE1NjI5ZTc4ZiJdfX0seyJpZCI6ImI4YTlkNjVhLWI2YTYtNDAxMC04OTcxLTU3ZGIwNmU5ZjUyZSIsImdlbVR5cGUiOiI4NjE3NDNjMy04MDBmLTRhYzktYjQ4NS0xZmFjYWJkZTQ2ZDEiLCJwcm9wZXJ0aWVzIjpbeyJwcm9wZXJ0eU5hbWUiOiJUZWFtIiwicHJvcGVydHlWYWx1ZSI6IjIifSx7InByb3BlcnR5TmFtZSI6IkFsdFRlYW0iLCJwcm9wZXJ0eVZhbHVlIjoiMCJ9LHsicHJvcGVydHlOYW1lIjoiT2JqSWQiLCJwcm9wZXJ0eVZhbHVlIjoiMSJ9XSwidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOjEsInkiOjAsInoiOjB9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLCJ5IjowLCJ6IjoxfSwidHJhbnMiOnsieCI6MjkzLjEzNCwieSI6NzAuMzU2NCwieiI6MTM0LjUxOH19LCJsaW5rZWQiOnsiSW5mYW50cnlTcGF3bnMiOlsiNGJlMjdkMjItODgyMS00YTBjLTg5OTItZDQ3NDM1OGQ5NWQ2IiwiMGM3ZTAxNzMtZjc0NS00NGVlLWIyZGItMzg0NjkyNDc1ZDkwIiwiMjMyMWYwZjgtNzBiMi00NWU5LTlhMjEtYTlhOGE4ZGFjZjk3IiwiMzdiYWI0YmMtNjYwZC00ZjRhLTlmMDQtOWZhODM4MTNkN2JmIiwiOWI4ZDgzNjAtMDcwMC00ODZkLWIxMzItNGM3MGZkZDA4NjU1IiwiOTcxMzI1NjQtMzgwMi00ZWRhLWEzYWItYjQ3ZmNhMTkzMGZkIiwiM2ZiMDFmZTItMWQzZi00ODg0LWIyNWYtZWE1YmY0MmUxNjgzIiwiZjFmZjZkMDItMzNiMi00NWUwLWJmYzMtNmFhYzMxNjQ4ODNhIiwiNDUzMjkzZDktNTFlMy00OGMyLWE5NWUtOTA1ODYzMDllYjU5IiwiMzE1OTI0MTktNzAwMi00NWQ2LWJmNzMtMjkzMWJlNDMxNGFjIl19fV0sImFkZERhdGFDb250YWluZXIiOlt7ImlkIjoiYTYwNGNjMWQtOWU1My00ZjZlLTg5MDQtMDFhZmZmMDQwYTE2IiwidHlwZSI6InZvbHVtZVBvbHlnb24iLCJwcm9wZXJ0aWVzIjp7ImhlaWdodCI6MTAwLCJwb2ludHMiOlt7IngiOjMwMC40NzUsInkiOi00LjkyODksInoiOjQ2LjYxNH0seyJ4IjoyODcuMDg4LCJ5IjotNC45Mjg5LCJ6Ijo0OS41Njk3fSx7IngiOjI4Ny43ODMsInkiOi00LjkyODksInoiOjYyLjI2MzN9LHsieCI6Mjk0LjA0MiwieSI6LTQuOTI4OSwieiI6NjIuMTc2NH0seyJ4IjoyODMuMTYsInkiOi00LjkyODksInoiOjc4Ljk2NTR9LHsieCI6MjcxLjA3NiwieSI6LTQuOTI4OSwieiI6ODEuMzc4NX0seyJ4IjoyNzAuMjk0LCJ5IjotNC45Mjg5LCJ6Ijo5My4yODg1fSx7IngiOjI2MS4yNzYsInkiOi00LjkyODksInoiOjg5LjU0MjF9LHsieCI6MjU0LjIxMSwieSI6LTQuOTI4OSwieiI6MTA3LjYzMjV9LHsieCI6MjY1Ljc0NywieSI6LTQuOTI4OSwieiI6MTEyLjI1NDh9LHsieCI6MjcwLjQ3NywieSI6LTQuOTI4OSwieiI6MTIxLjcxNjV9LHsieCI6MjYzLjUwMSwieSI6LTQuOTI4OSwieiI6MTI1LjE2NTJ9LHsieCI6MjY3LjA2NywieSI6LTQuOTI4OSwieiI6MTMyLjI5NzF9LHsieCI6Mjc4LjYyOCwieSI6LTQuOTI4OSwieiI6MTU1Ljc3OX0seyJ4IjoyOTIuOTY2LCJ5IjotNC45Mjg5LCJ6IjoxNTIuMTU1fSx7IngiOjI5MS42OTEsInkiOi00LjkyODksInoiOjE0NC41NDh9LHsieCI6MzAwLjg5MSwieSI6LTQuOTI4OSwieiI6MTQxLjkyfSx7IngiOjMwMS4xNywieSI6LTQuOTI4OSwieiI6MTU4LjE2OX0seyJ4IjozMTQuMzY5MywieSI6LTQuOTI4OSwieiI6MTU3LjkyNH0seyJ4IjozMTMuOTMxMiwieSI6LTQuOTI4OSwieiI6MTQyLjExMn0seyJ4IjozMTYuMDA1OSwieSI6LTQuOTI4OSwieiI6MTQyLjE1Nn0seyJ4IjozNDguNzgzMiwieSI6LTQuOTI4OSwieiI6MTQyLjM5NX0seyJ4IjozNTcuMjI2NCwieSI6LTQuOTI4OSwieiI6MTQ3LjMzM30seyJ4IjozNjkuODkxMywieSI6LTQuOTI4OSwieiI6MTQ5LjM2NH0seyJ4IjozNzAuNjQ3OSwieSI6LTQuOTI4OSwieiI6MTQ1LjU4MX0seyJ4IjozNzUuNjE4LCJ5IjotNC45Mjg5LCJ6IjoxNDQuMTg0fSx7IngiOjM4Mi4yNTQsInkiOi00LjkyODksInoiOjEzOC4xOH0seyJ4IjozODMuMzkxNiwieSI6LTQuOTI4OSwieiI6MTQwLjI2Nn0seyJ4IjozOTQuNzgxNSwieSI6LTQuOTI4OSwieiI6MTM1LjA1MX0seyJ4IjozOTIuNDY0NywieSI6LTQuOTI4OSwieiI6MTI3LjY5Nzd9LHsieCI6MzkwLjMxNDEsInkiOi00LjkyODksInoiOjEyMi40NDA2fSx7IngiOjM5Ny41MjI3LCJ5IjotNC45Mjg5LCJ6IjoxMTkuMTM1fSx7IngiOjM5NC4zNTE0LCJ5IjotNC45Mjg5LCJ6IjoxMDkuMzI2NH0seyJ4Ijo0MjEuMzAxNzgsInkiOi00LjkyODksInoiOjg5Ljg2NjJ9LHsieCI6NDE1LjE1MTYsInkiOi00LjkyODksInoiOjc5LjU3NjV9LHsieCI6NDA5LjgyOTMzLCJ5IjotNC45Mjg5LCJ6Ijo4Mi40MTV9LHsieCI6NDA2Ljc1NDI2LCJ5IjotNC45Mjg5LCJ6Ijo3Ny40NDc2fSx7IngiOjQwMC4wMTI3LCJ5IjotNC45Mjg5LCJ6Ijo4MS45NDJ9LHsieCI6Mzk3LjY0NzMsInkiOi00LjkyODksInoiOjc4LjM5Mzh9LHsieCI6Mzk0LjMzNTYsInkiOi00LjkyODksInoiOjgwLjQwNDR9LHsieCI6Mzg4LjY5MjYsInkiOi00LjkyODksInoiOjY2Ljg2OTZ9LHsieCI6Mzc0LjE0NSwieSI6LTQuOTI4OSwieiI6NDcuMTE4MX0seyJ4IjozNjQuNjgzMiwieSI6LTQuOTI4OSwieiI6NTUuMDQyM30seyJ4IjozNjEuNzI2NCwieSI6LTQuOTI4OSwieiI6NTUuMzk3Mn0seyJ4IjozNjIuNjcyNiwieSI6LTQuOTI4OSwieiI6NDYuMDUzNn0seyJ4IjozNTQuOTI5LCJ5IjotNC45Mjg5LCJ6Ijo0NS43Mjg3fSx7IngiOjMzOS4zMzIsInkiOi00LjkyODksInoiOjQ1LjUxNDF9LHsieCI6MzA4LjE1OCwieSI6LTQuOTI4OSwieiI6NDUuNzU1OH1dfX0seyJpZCI6IjcxZjEwZWM1LTFiOGYtNDY1NC1iNjY4LTA5MmIwMjViYWYyMyIsInR5cGUiOiJzcGF3bnBvaW50IiwicHJvcGVydGllcyI6eyJ0cmFuc2Zvcm0iOnsicmlnaHQiOnsieCI6LTAuNTU3MzU0LCJ5IjowLCJ6IjotMC44MzAyNzV9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLjgzMDI3NSwieSI6MCwieiI6LTAuNTU3MzU0fSwidHJhbnMiOnsieCI6MzY2LjQyNCwieSI6NjMuODYyLCJ6Ijo5NC4xMjQ4fX19fSx7ImlkIjoiNmUxNDhmODQtYTJmNy00NjE1LWFhYzctY2FkZWY3MjI5ZjllIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC43OTk3NDgsInkiOjAsInoiOjAuNjAwMzM3fSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6LTAuNjAwMzM3LCJ5IjowLCJ6IjotMC43OTk3NDh9LCJ0cmFucyI6eyJ4IjozNzIuNzA1LCJ5Ijo2OC43NTgxLCJ6IjoxMzkuNDQ0fX19fSx7ImlkIjoiOWVlMjVkODUtNjYzMS00MjQ5LWJkMmUtODFiODg3YmVkZjE0IiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjowLjY2OTMzOCwieSI6MCwieiI6LTAuNzQyOTU4fSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6MC43NDI5NTgsInkiOjAsInoiOjAuNjY5MzM4fSwidHJhbnMiOnsieCI6MzM0LjA2LCJ5Ijo2NS43ODkxLCJ6IjoxMDIuNTY1fX19fSx7ImlkIjoiZDgzNjAzMDgtNjQ0Ni00NzJjLTk4YzUtNzg1OTgwNWE2YTMzIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjowLjg0ODc1LCJ5IjowLCJ6IjotMC41Mjg3OTR9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLjUyODc5NCwieSI6MCwieiI6MC44NDg3NX0sInRyYW5zIjp7IngiOjMwMy43MSwieSI6NjkuOTgzNSwieiI6MTMwLjU1Mn19fX0seyJpZCI6IjQ3M2IwM2I2LTY0NTctNGEwZi1hYzIxLWEzMzdhYWRkOTE3ZSIsInR5cGUiOiJzcGF3bnBvaW50IiwicHJvcGVydGllcyI6eyJ0cmFuc2Zvcm0iOnsicmlnaHQiOnsieCI6MC40NzcwNTEsInkiOjAsInoiOi0wLjg3ODg3NX0sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAuODc4ODc1LCJ5IjowLCJ6IjowLjQ3NzA1MX0sInRyYW5zIjp7IngiOjI3MC44NzIsInkiOjY3LjY3ODksInoiOjEwMy41MDh9fX19LHsiaWQiOiI1YTE2MDQ4NS0yMzNiLTQ0ZjQtYjkwMC0zNjQ4YmZkMTc1YTgiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOjEsInkiOjAsInoiOjB9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLCJ5IjowLCJ6IjoxfSwidHJhbnMiOnsieCI6MzAyLjE5NCwieSI6NjAuNDkzLCJ6Ijo2MC4zMzc4fX19fSx7ImlkIjoiNDFhMWFhNzMtZmM2Ny00Y2M1LWFjZjktMDY1NjY1ZjRmNGJlIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC40NDg1MzksInkiOjAsInoiOi0wLjg5Mzc2M30sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAuODkzNzYzLCJ5IjowLCJ6IjotMC40NDg1Mzl9LCJ0cmFucyI6eyJ4IjozMjUuNDA5LCJ5Ijo2NS41NDk4LCJ6Ijo4NC4zODF9fX19LHsiaWQiOiI4MzUyOTBiNC1hNGQzLTQyNWQtODAzNS0wNDYzMDY4OTZkOGQiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOi0wLjg4MjAyOCwieSI6MCwieiI6MC40NzExOTd9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjotMC40NzExOTcsInkiOjAsInoiOi0wLjg4MjAyOH0sInRyYW5zIjp7IngiOjM2Mi4yNDcsInkiOjYyLjg1ODgsInoiOjY4Ljc4NTl9fX19LHsiaWQiOiIxZjg5MmY1Mi0wMGQxLTQ2YjctOGRmMi1mOWI4YmZkZjM5YjUiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOi0wLjA5MDU5NzksInkiOjAsInoiOi0wLjk5NTg4OH0sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAuOTk1ODg4LCJ5IjowLCJ6IjotMC4wOTA1OTc5fSwidHJhbnMiOnsieCI6MzE0LjI2NCwieSI6NjUuNzU2MSwieiI6MTEzLjIwNn19fX0seyJpZCI6ImY0YzAyNTQ0LTYyNmUtNDllMy04M2M2LWUzODcyNmE0MWY2ZiIsInR5cGUiOiJzcGF3bnBvaW50IiwicHJvcGVydGllcyI6eyJ0cmFuc2Zvcm0iOnsicmlnaHQiOnsieCI6MC44Nzg2NDIsInkiOjAsInoiOi0wLjQ3NzQ4MX0sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAuNDc3NDgxLCJ5IjowLCJ6IjowLjg3ODY0Mn0sInRyYW5zIjp7IngiOjM1NS43NDQsInkiOjY2LjU1MDEsInoiOjExNC45NX19fX0seyJpZCI6IjFiOWY4MWRiLWJiY2UtNGYxMS05Y2U5LTBkMjE1NjI5ZTc4ZiIsInR5cGUiOiJzcGF3bnBvaW50IiwicHJvcGVydGllcyI6eyJ0cmFuc2Zvcm0iOnsicmlnaHQiOnsieCI6LTAuMTQ2NzIyLCJ5IjowLCJ6IjotMC45ODkxNzh9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLjk4OTE3OCwieSI6MCwieiI6LTAuMTQ2NzIyfSwidHJhbnMiOnsieCI6MzIzLjYsInkiOjY4LjcxMTksInoiOjEyNC43MTJ9fX19LHsiaWQiOiI0YmUyN2QyMi04ODIxLTRhMGMtODk5Mi1kNDc0MzU4ZDk1ZDYiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOi0wLjkyODI0LCJ5IjowLCJ6IjowLjM3MTk4NH0sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOi0wLjM3MTk4NCwieSI6MCwieiI6LTAuOTI4MjR9LCJ0cmFucyI6eyJ4IjozNTAuODg4LCJ5Ijo2OC43NTgxLCJ6IjoxMzkuMjE4fX19fSx7ImlkIjoiMGM3ZTAxNzMtZjc0NS00NGVlLWIyZGItMzg0NjkyNDc1ZDkwIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC4zMjg5MzMsInkiOjAsInoiOi0wLjk0NDM1M30sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAuOTQ0MzUzLCJ5IjowLCJ6IjotMC4zMjg5MzN9LCJ0cmFucyI6eyJ4IjoyODYuMzA1LCJ5Ijo2OC4xMzA3LCJ6IjoxMTkuNDcxfX19fSx7ImlkIjoiMjMyMWYwZjgtNzBiMi00NWU5LTlhMjEtYTlhOGE4ZGFjZjk3IiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC4yNDU3OTgsInkiOjAsInoiOjAuOTY5MzIxfSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6LTAuOTY5MzIxLCJ5IjowLCJ6IjotMC4yNDU3OTh9LCJ0cmFucyI6eyJ4IjozMDEuNzAzLCJ5Ijo2NC41MTQsInoiOjkzLjA1MzR9fX19LHsiaWQiOiIzN2JhYjRiYy02NjBkLTRmNGEtOWYwNC05ZmE4MzgxM2Q3YmYiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOjAuMzUwNTY3LCJ5IjowLCJ6IjotMC45MzY1Mzh9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjowLjkzNjUzOCwieSI6MCwieiI6MC4zNTA1Njd9LCJ0cmFucyI6eyJ4IjozMDQuNzc3LCJ5Ijo2Ni4yMzYyLCJ6IjoxMTUuNjE1fX19fSx7ImlkIjoiOWI4ZDgzNjAtMDcwMC00ODZkLWIxMzItNGM3MGZkZDA4NjU1IiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC44MzA3MjIsInkiOjAsInoiOjAuNTU2Njg3fSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6LTAuNTU2Njg3LCJ5IjowLCJ6IjotMC44MzA3MjJ9LCJ0cmFucyI6eyJ4IjozNDYuMTg3LCJ5Ijo2NS42MTEzLCJ6Ijo3OC40MDA4fX19fSx7ImlkIjoiOTcxMzI1NjQtMzgwMi00ZWRhLWEzYWItYjQ3ZmNhMTkzMGZkIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjotMC4xNDUzOTIsInkiOjAsInoiOjAuOTg5Mzc0fSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6LTAuOTg5Mzc0LCJ5IjowLCJ6IjotMC4xNDUzOTJ9LCJ0cmFucyI6eyJ4IjozODMuNTA3LCJ5Ijo2Ni42MDExLCJ6IjoxMDYuMDYzfX19fSx7ImlkIjoiM2ZiMDFmZTItMWQzZi00ODg0LWIyNWYtZWE1YmY0MmUxNjgzIiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjowLjcwMjE1MywieSI6MCwieiI6MC43MTIwMjZ9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjotMC43MTIwMjYsInkiOjAsInoiOjAuNzAyMTUzfSwidHJhbnMiOnsieCI6Mzc2LjA2OCwieSI6NjMuMDAwOCwieiI6NTguMDA3MX19fX0seyJpZCI6ImYxZmY2ZDAyLTMzYjItNDVlMC1iZmMzLTZhYWMzMTY0ODgzYSIsInR5cGUiOiJzcGF3bnBvaW50IiwicHJvcGVydGllcyI6eyJ0cmFuc2Zvcm0iOnsicmlnaHQiOnsieCI6MSwieSI6MCwieiI6MH0sInVwIjp7IngiOjAsInkiOjEsInoiOjB9LCJmb3J3YXJkIjp7IngiOjAsInkiOjAsInoiOjF9LCJ0cmFucyI6eyJ4IjozMjAuMjA5LCJ5Ijo2Mi41ODA3LCJ6Ijo2My41MTE2fX19fSx7ImlkIjoiNDUzMjkzZDktNTFlMy00OGMyLWE5NWUtOTA1ODYzMDllYjU5IiwidHlwZSI6InNwYXducG9pbnQiLCJwcm9wZXJ0aWVzIjp7InRyYW5zZm9ybSI6eyJyaWdodCI6eyJ4IjoxLCJ5IjowLCJ6IjowfSwidXAiOnsieCI6MCwieSI6MSwieiI6MH0sImZvcndhcmQiOnsieCI6MCwieSI6MCwieiI6MX0sInRyYW5zIjp7IngiOjMyNC43OTYsInkiOjczLjQ4MTcsInoiOjk3LjEzODV9fX19LHsiaWQiOiIzMTU5MjQxOS03MDAyLTQ1ZDYtYmY3My0yOTMxYmU0MzE0YWMiLCJ0eXBlIjoic3Bhd25wb2ludCIsInByb3BlcnRpZXMiOnsidHJhbnNmb3JtIjp7InJpZ2h0Ijp7IngiOi0wLjY3OTYyMSwieSI6MCwieiI6MC43MzM1NjR9LCJ1cCI6eyJ4IjowLCJ5IjoxLCJ6IjowfSwiZm9yd2FyZCI6eyJ4IjotMC43MzM1NjQsInkiOjAsInoiOi0wLjY3OTYyMX0sInRyYW5zIjp7IngiOjM0NS44NCwieSI6NjUuNzM2MiwieiI6MTA0LjQzfX19fV19"},"attachmentType":1,"metadata":"mapIdx=0","errors":[]},{"id":"a5613025-bb26-4001-bac6-77c79e4be80f","version":"345","filename":"Strings.json","isProcessable":false,"processingStatus":2,"attachmentData":{"original":"eyJkaXJlY3QiOiJ7fSIsImRlbW90aW9uIjoie30gZ290IGRlbW90ZWQgYnkge30iLCJpbGxlZ2FsS2l0IjoiRG9uJ3QgY2hhbmdlIHlvdXIgd2VhcG9uISIsInNjb3JlYm9hcmQiOnsiaGVhZGVyIjoiR3VuIE1hc3RlciIsIkxWTCI6IkxWTCIsIktpbGxzIjoiSyIsIkRlYXRocyI6IkQifSwidWkiOnsicGxDb3VudCI6Int9IiwiYnRucyI6eyJkZXBsb3kiOiJEZXBsb3kiLCJjYW5jZWwiOiJDYW5jZWwifSwiZmlyc3QiOiIxLiBMVkwge30iLCJzZWNvbmQiOiIyLiBMVkwge30iLCJ0aGlyZCI6IjMuIExWTCB7fSJ9fQ==","compiled":""},"attachmentType":4,"errors":[]}]}